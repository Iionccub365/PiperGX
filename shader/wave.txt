uniform shader iChunk;
uniform float2 iChunkSize;
uniform float iFrame;


vec4 main (vec2 xy)
{
    vec2 uv = fragCoord/iResolution.xy;
    vec4 tex0 = texture(iChannel0, uv);
    
    float H = iMouse.x/iResolution.x * 0.0; // Hue shift        0-3
    float S = iMouse.y/iResolution.y * 2.0;       // Saturation scale 0-3
    float V = 1.0;                          // Value scale      0-1
    
    // 2 or 3 components of hue_term can be calculated on the CPU if prefered to remove the min/abs/sub here
    vec3 hue_term = 1.0 - min(abs(vec3(H) - vec3(0,2.0,1.0)), 1.0);
    hue_term.x = 1.0 - dot(hue_term.yz, vec2(1));
    vec3 res = vec3(dot(tex0.xyz, hue_term.xyz), dot(tex0.xyz, hue_term.zxy), dot(tex0.xyz, hue_term.yzx));
    res = mix(vec3(dot(res, vec3(0.2, 0.5, 0.3))), res, S);
    res = res * V;
    fragColor = vec4(res, tex0.w);
}